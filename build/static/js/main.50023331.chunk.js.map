{"version":3,"sources":["serviceWorker.ts","rpe-calc.ts","RPECalc.tsx","RPECalcTour.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","RPE","math","VALID_RPE","VALID_REPS","calc1RM","x","y","weight","percent","get","findPercentOf1RM","Math","round","mroundMatrix","matrix","roundTo","map","a","number","mround","createNewMatrixFrom1RM","oneRM","balanceRPEMatrix","RepsHeaders","className","style","textAlign","colSpan","length","onClick","this","props","onHelp","float","type","onChange","onRoundChange","defaultValue","key","rep","React","PureComponent","SPECTRAL11","determineSpectralColor","idx","backgroundColor","color","RPEInput","node","onMouseDown","placeholder","value","onBlur","String","n","onKeyDown","data-x","data-y","fontWeight","ref","RPECalc","state","rpeMatrix","event","preventDefault","target","Number","dataset","setState","toArray","row","href","tour","Shepherd","Tour","defaultStepOptions","scrollTo","cancelIcon","enabled","useModalOverlay","exitOnEsc","PREVIOUS_BTN","text","action","back","classes","CANCEL_BTN","cancel","NEXT_BTN","next","BUTTONS","STEPS","id","attachTo","element","on","buttons","addSteps","start","RPECalcTour","localStorage","getItem","setItem","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50023331.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as math from \"mathjs\";\r\n\r\nexport const RPE = math.round(\r\n  math.multiply(\r\n    math.matrix([\r\n      [100, 95.5, 92.2, 89.2, 86.3, 83.7, 81.1, 78.6, 76.2, 73.9],\r\n      [97.8, 93.9, 90.7, 87.8, 85, 82.4, 79.9, 77.4, 75.1, 72.3],\r\n      [95.5, 92.2, 89.2, 86.3, 83.7, 81.1, 78.6, 76.2, 73.9, 70.7],\r\n      [93.9, 90.7, 87.8, 85, 82.4, 79.9, 77.4, 75.1, 72.3, 69.4],\r\n      [92.2, 89.2, 86.3, 83.7, 81.1, 78.6, 76.2, 73.9, 70.7, 68.0],\r\n      [90.7, 87.8, 85, 82.4, 79.9, 77.4, 75.1, 72.3, 69.4, 66.7],\r\n      [89.2, 86.3, 83.7, 81.1, 78.6, 76.2, 73.9, 70.7, 68.0, 65.3],\r\n      [87.8, 85, 82.4, 79.9, 77.4, 75.1, 72.3, 69.4, 66.7, 64],\r\n      [86.3, 83.7, 81.1, 78.6, 76.2, 73.9, 70.7, 68.0, 65.3, 62.6],\r\n      [85.0, 82.4, 79.9, 77.4, 75.1, 72.3, 69.4, 66.7, 64.0, 61.3],\r\n      [83.7, 81.1, 78.6, 76.2, 73.9, 70.7, 68.0, 65.3, 62.6, 59.9]\r\n    ]),\r\n    0.01\r\n  ),\r\n  2\r\n);\r\n\r\ntype Matrix = typeof RPE;\r\n\r\nexport const VALID_RPE = [10,9.5,9,8.5,8,7.5,7,6.5,6,5.5,5];\r\nexport const VALID_REPS = [1,2,3,4,5,6,7,8,9,10];\r\n\r\nfunction findPercentOf1RM(x:number,y:number){\r\n  return RPE.get([y,x]) as number;\r\n}\r\n\r\nfunction calc1RM(x:number,y:number,weight:number){\r\n  const percent = findPercentOf1RM(x,y);\r\n  return Math.round(weight/percent);\r\n}\r\n\r\nfunction mround(number:number, roundTo:number){\r\n  return roundTo * Math.round(number/roundTo);\r\n}\r\n\r\nfunction mroundMatrix(matrix:Matrix,roundTo:number){\r\n  return matrix.map(a => mround(a,roundTo));\r\n}\r\n\r\nfunction createNewMatrixFrom1RM(oneRM:number,roundTo:number = 1){\r\n  return mroundMatrix(math.multiply(RPE,oneRM),roundTo);\r\n}\r\n\r\nexport function balanceRPEMatrix(x:number,y:number,weight:number,roundTo:number = 1){\r\n  const oneRM = calc1RM(x,y,weight);\r\n  return createNewMatrixFrom1RM(oneRM,roundTo);\r\n}\r\n\r\n","import React from \"react\";\r\nimport { VALID_RPE, VALID_REPS, RPE, balanceRPEMatrix } from \"./rpe-calc\";\r\nimport \"./RPECalc.css\";\r\n\r\n\r\ntype RepHeadersProps = {\r\n  roundTo: number;\r\n  onRoundChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onHelp: () => void;\r\n};\r\nclass RepsHeaders extends React.PureComponent<RepHeadersProps> {\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          <td className=\"number-of-reps\" style={{ textAlign: \"center\" }} colSpan={VALID_REPS.length + 1}>\r\n            <span className=\"left-help-button\"></span>\r\n            <span onClick={this.props.onHelp} className=\"help-button\"></span>\r\n            <strong className=\"number-of-reps-span\">Number of Reps</strong>\r\n            <span className=\"round-to-the-nearest\" style={{ float: \"right\" }}>\r\n              Round to the nearest{\" \"}\r\n              <input type=\"number\" onChange={this.props.onRoundChange} defaultValue={this.props.roundTo} />\r\n            </span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th className=\"td-content\" key=\"RPE\">\r\n            RPE\r\n          </th>\r\n          {VALID_REPS.map(rep => (\r\n            <th className=\"td-content\" key={rep}>\r\n              {rep}x\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n/**\r\n * From https://github.com/saikocat/colorbrewer/blob/master/index.js\r\n */\r\nconst SPECTRAL11 = [\r\n  \"#9e0142\",\r\n  \"#d53e4f\",\r\n  \"#f46d43\",\r\n  \"#fdae61\",\r\n  \"#fee08b\",\r\n  \"#ffffbf\",\r\n  \"#e6f598\",\r\n  \"#abdda4\",\r\n  \"#66c2a5\",\r\n  \"#3288bd\",\r\n  \"#5e4fa2\"\r\n];\r\n\r\nfunction determineSpectralColor(x: number, y: number) {\r\n  const idx = Math.round((x + y) / 2.2);\r\n  return {\r\n    backgroundColor: SPECTRAL11[idx],\r\n    color: idx < 3 || idx > 8 ? \"white\" : \"black\"\r\n  };\r\n}\r\n\r\ntype RPEInputProps = {\r\n  x: number;\r\n  y: number;\r\n  onKeyDown: (event: React.KeyboardEvent<HTMLInputElement>) => void;\r\n  n: number;\r\n};\r\n\r\nclass RPEInput extends React.PureComponent<RPEInputProps> {\r\n  node: HTMLInputElement | null = null;\r\n  componentDidUpdate() {\r\n    if (this.node) {\r\n      this.node.value = String(this.props.n);\r\n    }\r\n  }\r\n  onMouseDown = () =>{\r\n    if (this.node) {\r\n      this.node.placeholder = this.node.value;\r\n      this.node.value = \"\";\r\n    }\r\n  }\r\n  onBlur = () => {\r\n    if (this.node && !this.node.value) {\r\n      this.node.value = String(this.props.n);\r\n    }\r\n  }\r\n  render() {\r\n    const { x, y, n, onKeyDown } = this.props;\r\n    return (\r\n      <input\r\n        type=\"number\"\r\n        data-x={x}\r\n        data-y={y}\r\n        onMouseDown={this.onMouseDown}\r\n        onKeyDown={onKeyDown}\r\n        onBlur={this.onBlur}\r\n        className=\"weight-input\"\r\n        style={{ fontWeight: 700, ...determineSpectralColor(x, y) }}\r\n        defaultValue={n}\r\n        ref={node => (this.node = node)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\ntype RPECalcProps = {\r\n  onHelp: () => void;\r\n}\r\n\r\nexport default class RPECalc extends React.PureComponent<RPECalcProps> {\r\n  state = {\r\n    rpeMatrix: RPE,\r\n    roundTo: 5\r\n  };\r\n  onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key !== \"Enter\") return;\r\n    event.preventDefault();\r\n    const target = event.target as HTMLInputElement;\r\n    const x = Number(target.dataset.x);\r\n    const y = Number(target.dataset.y);\r\n    const weight = Number(target.value);\r\n    const rpeMatrix = balanceRPEMatrix(x, y, weight, this.state.roundTo);\r\n    this.setState({ rpeMatrix });\r\n  };\r\n  onRoundChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const target = event.target as HTMLInputElement;\r\n    const roundTo = Number(target.value);\r\n    this.setState({ roundTo });\r\n  };\r\n  render() {\r\n    const matrix = this.state.rpeMatrix.toArray() as number[][];\r\n    return (\r\n      <table className=\"rpe-calc-table\">\r\n        <RepsHeaders onHelp={this.props.onHelp} roundTo={this.state.roundTo} onRoundChange={this.onRoundChange} />\r\n        <tbody>\r\n          {matrix.map((row, y) => {\r\n            return (\r\n              <tr className=\"rpe-calc-row\" key={`row-${y}`}>\r\n                <td className=\"rpe-calc-cell\" style={{ textAlign: \"center\" }} key={VALID_RPE[y]}>\r\n                  <span className=\"td-content rpe-value-cell\">{VALID_RPE[y]}</span>\r\n                </td>\r\n                {row.map((n, x) => {\r\n                  return (\r\n                    <td className=\"rpe-calc-cell\" key={`${x},${y}`}>\r\n                      <RPEInput x={x} y={y} n={n} onKeyDown={this.onKeyDown} />\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td   className=\"reactive-link\" colSpan={VALID_REPS.length + 1}>\r\n              <span >\r\n                Percentages and methods based off <a href=\"https://www.reactivetrainingsystems.com/Home/Main\">Reactive Training Systems</a>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport RPECalc from './RPECalc';\r\nimport Shepherd from 'shepherd.js';\r\nimport 'shepherd.js/dist/css/shepherd.css';\r\nimport './RPECalcTour.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst tour = new Shepherd.Tour({\r\n    defaultStepOptions: {\r\n      scrollTo: true,\r\n      cancelIcon: {\r\n        enabled: false\r\n      }\r\n    },\r\n    useModalOverlay:true,\r\n    exitOnEsc: true\r\n});\r\n\r\nconst PREVIOUS_BTN =  {\r\n    text:'🢀',\r\n    action:tour.back,\r\n    classes:'previous-tour-btn'\r\n};\r\n\r\nconst CANCEL_BTN = {\r\n    text:'✖',\r\n    action:tour.cancel,\r\n    classes:'cancel-tour-btn'\r\n}\r\n\r\nconst NEXT_BTN = {\r\n    text: '🢂',\r\n    action: tour.next,\r\n    classes:'next-tour-btn'\r\n}\r\n\r\nconst OK_BTN = {\r\n    text:'OK',\r\n    action:tour.cancel,\r\n    classes:'cancel-tour-btn' \r\n}\r\n\r\nconst BUTTONS = [\r\n    PREVIOUS_BTN,\r\n    CANCEL_BTN,\r\n    NEXT_BTN\r\n]\r\n\r\nconst STEPS = [\r\n    {\r\n      id:'intro',\r\n      text:'Welcome to RPE Matrix Calculator! This allows you to calculate multiple Rep/RPE Combinations at once',\r\n      attachTo: {\r\n        element: '.number-of-reps > .number-of-reps-span',\r\n        on: 'bottom' as any\r\n      },\r\n      buttons:[CANCEL_BTN,NEXT_BTN]\r\n    },\r\n    {\r\n        id:'weight-input',\r\n        text:'Input the weight lifted at the given RPE/Rep combination (eg. 295 for 3 reps at RPE 9.5). Then press Enter/Go',\r\n        attachTo:{\r\n            element:\"#root > table > tbody > tr:nth-child(2) > td:nth-child(7) > input\",\r\n            on: 'right'\r\n        },\r\n        buttons:BUTTONS\r\n    },\r\n    {\r\n        id:'rounding-to',\r\n        text:'Round to the nearest 5, 2.5, or 1 increment using this input',\r\n        attachTo:{\r\n            element:'.round-to-the-nearest',\r\n            on:'left'\r\n        },\r\n        buttons:BUTTONS\r\n    },\r\n    {\r\n        id:'redo-tour',\r\n        text:\"If you'd like to see this tour again, just click this button\",\r\n        attachTo:{\r\n            element:'.left-help-button',\r\n            on:'bottom'\r\n        },\r\n        buttons:[PREVIOUS_BTN, OK_BTN]\r\n    }\r\n];\r\n\r\ntour.addSteps(STEPS);\r\n\r\nconst TOUR_KEY = \"rpe-tour-completed\";\r\n\r\nconst onHelp = () => tour.start();\r\n\r\n\r\nexport default class RPECalcTour extends React.PureComponent {\r\n    componentDidMount(){\r\n        if(!localStorage.getItem(TOUR_KEY)){\r\n            tour.start();\r\n            localStorage.setItem(TOUR_KEY,\"true\");\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n                <RPECalc onHelp={onHelp}/>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport RPECalc from './RPECalc';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport RPECalcTour from './RPECalcTour';\r\n\r\nReactDOM.render(\r\n    <RPECalcTour />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}