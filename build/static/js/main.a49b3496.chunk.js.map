{"version":3,"sources":["serviceWorker.ts","rpe-calc.ts","RPECalc.tsx","RPECalcTour.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","RPE","math","VALID_RPE","VALID_REPS","calc1RM","x","y","weight","percent","get","findPercentOf1RM","Math","round","mroundMatrix","matrix","roundTo","map","a","number","mround","createNewMatrixFrom1RM","oneRM","balanceRPEMatrix","RepsHeaders","className","style","textAlign","colSpan","length","onClick","this","props","onHelp","float","type","onChange","onRoundChange","defaultValue","key","rep","React","PureComponent","SPECTRAL11","determineSpectralColor","idx","backgroundColor","color","RPEInput","node","onKeyDown","event","preventDefault","target","handleChange","onMouseDown","placeholder","value","onBlur","String","n","data-x","data-y","fontWeight","ref","RPECalc","rpeMatrix","Number","dataset","setState","toArray","row","href","tour","Shepherd","Tour","defaultStepOptions","scrollTo","cancelIcon","enabled","useModalOverlay","exitOnEsc","PREVIOUS_BTN","text","action","back","classes","CANCEL_BTN","cancel","NEXT_BTN","next","BUTTONS","STEPS","id","attachTo","element","on","buttons","addSteps","start","RPECalcTour","localStorage","getItem","setItem","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a49b3496.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as math from \"mathjs\";\n\nexport const RPE = math.round(\n  math.multiply(\n    math.matrix([\n      [100, 95.5, 92.2, 89.2, 86.3, 83.7, 81.1, 78.6, 76.2, 73.9],\n      [97.8, 93.9, 90.7, 87.8, 85, 82.4, 79.9, 77.4, 75.1, 72.3],\n      [95.5, 92.2, 89.2, 86.3, 83.7, 81.1, 78.6, 76.2, 73.9, 70.7],\n      [93.9, 90.7, 87.8, 85, 82.4, 79.9, 77.4, 75.1, 72.3, 69.4],\n      [92.2, 89.2, 86.3, 83.7, 81.1, 78.6, 76.2, 73.9, 70.7, 68.0],\n      [90.7, 87.8, 85, 82.4, 79.9, 77.4, 75.1, 72.3, 69.4, 66.7],\n      [89.2, 86.3, 83.7, 81.1, 78.6, 76.2, 73.9, 70.7, 68.0, 65.3],\n      [87.8, 85, 82.4, 79.9, 77.4, 75.1, 72.3, 69.4, 66.7, 64],\n      [86.3, 83.7, 81.1, 78.6, 76.2, 73.9, 70.7, 68.0, 65.3, 62.6],\n      [85.0, 82.4, 79.9, 77.4, 75.1, 72.3, 69.4, 66.7, 64.0, 61.3],\n      [83.7, 81.1, 78.6, 76.2, 73.9, 70.7, 68.0, 65.3, 62.6, 59.9]\n    ]),\n    0.01\n  ),\n  2\n);\n\ntype Matrix = typeof RPE;\n\nexport const VALID_RPE = [10,9.5,9,8.5,8,7.5,7,6.5,6,5.5,5];\nexport const VALID_REPS = [1,2,3,4,5,6,7,8,9,10];\n\nfunction findPercentOf1RM(x:number,y:number){\n  return RPE.get([y,x]) as number;\n}\n\nfunction calc1RM(x:number,y:number,weight:number){\n  const percent = findPercentOf1RM(x,y);\n  return Math.round(weight/percent);\n}\n\nfunction mround(number:number, roundTo:number){\n  return roundTo * Math.round(number/roundTo);\n}\n\nfunction mroundMatrix(matrix:Matrix,roundTo:number){\n  return matrix.map(a => mround(a,roundTo));\n}\n\nfunction createNewMatrixFrom1RM(oneRM:number,roundTo:number = 1){\n  return mroundMatrix(math.multiply(RPE,oneRM),roundTo);\n}\n\nexport function balanceRPEMatrix(x:number,y:number,weight:number,roundTo:number = 1){\n  const oneRM = calc1RM(x,y,weight);\n  return createNewMatrixFrom1RM(oneRM,roundTo);\n}\n\n","import React, { FocusEventHandler } from \"react\";\nimport { VALID_RPE, VALID_REPS, RPE, balanceRPEMatrix } from \"./rpe-calc\";\nimport \"./RPECalc.css\";\n\ntype RepHeadersProps = {\n  roundTo: number;\n  onRoundChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onHelp: () => void;\n};\nclass RepsHeaders extends React.PureComponent<RepHeadersProps> {\n  render() {\n    return (\n      <thead>\n        <tr>\n          <td\n            className=\"number-of-reps\"\n            style={{ textAlign: \"center\" }}\n            colSpan={VALID_REPS.length + 1}\n          >\n            <span className=\"left-help-button\"></span>\n            <span onClick={this.props.onHelp} className=\"help-button\"></span>\n            <strong className=\"number-of-reps-span\">Number of Reps</strong>\n            <span className=\"round-to-the-nearest\" style={{ float: \"right\" }}>\n              Round to the nearest{\" \"}\n              <input\n                type=\"number\"\n                onChange={this.props.onRoundChange}\n                defaultValue={this.props.roundTo}\n              />\n            </span>\n          </td>\n        </tr>\n        <tr>\n          <th className=\"td-content\" key=\"RPE\">\n            RPE\n          </th>\n          {VALID_REPS.map((rep) => (\n            <th className=\"td-content\" key={rep}>\n              {rep}x\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n/**\n * From https://github.com/saikocat/colorbrewer/blob/master/index.js\n */\nconst SPECTRAL11 = [\n  \"#9e0142\",\n  \"#d53e4f\",\n  \"#f46d43\",\n  \"#fdae61\",\n  \"#fee08b\",\n  \"#ffffbf\",\n  \"#e6f598\",\n  \"#abdda4\",\n  \"#66c2a5\",\n  \"#3288bd\",\n  \"#5e4fa2\",\n];\n\nfunction determineSpectralColor(x: number, y: number) {\n  const idx = Math.round((x + y) / 2.2);\n  return {\n    backgroundColor: SPECTRAL11[idx],\n    color: idx < 3 || idx > 8 ? \"white\" : \"black\",\n  };\n}\n\ntype RPEInputProps = {\n  x: number;\n  y: number;\n  handleChange: (target: HTMLInputElement) => void;\n  n: number;\n};\n\nclass RPEInput extends React.PureComponent<RPEInputProps> {\n  node: HTMLInputElement | null = null;\n  componentDidUpdate() {\n    if (this.node) {\n      this.node.value = String(this.props.n);\n    }\n  }\n  onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key !== \"Enter\") return;\n    event.preventDefault();\n    const target = event.target as HTMLInputElement;\n    this.props.handleChange(target);\n  };\n  onMouseDown = () => {\n    if (this.node) {\n      this.node.placeholder = this.node.value;\n      this.node.value = \"\";\n    }\n  };\n  onBlur = () => {\n    if (this.node && !this.node.value) {\n      this.node.value = String(this.props.n);\n    } else if (this.node && this.node.value) {\n      this.props.handleChange(this.node);\n    }\n  };\n  render() {\n    const { x, y, n } = this.props;\n    return (\n      <input\n        type=\"number\"\n        data-x={x}\n        data-y={y}\n        onMouseDown={this.onMouseDown}\n        onKeyDown={this.onKeyDown}\n        onBlur={this.onBlur}\n        className=\"weight-input\"\n        style={{ fontWeight: 700, ...determineSpectralColor(x, y) }}\n        defaultValue={n}\n        ref={(node) => (this.node = node)}\n      />\n    );\n  }\n}\n\ntype RPECalcProps = {\n  onHelp: () => void;\n};\n\nexport default class RPECalc extends React.PureComponent<RPECalcProps> {\n  state = {\n    rpeMatrix: RPE,\n    roundTo: 5,\n  };\n  handleChange = (target: HTMLInputElement) => {\n    const x = Number(target.dataset.x);\n    const y = Number(target.dataset.y);\n    const weight = Number(target.value);\n    const rpeMatrix = balanceRPEMatrix(x, y, weight, this.state.roundTo);\n    this.setState({ rpeMatrix });\n  };\n  onRoundChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target as HTMLInputElement;\n    const roundTo = Number(target.value);\n    this.setState({ roundTo });\n  };\n  render() {\n    const matrix = this.state.rpeMatrix.toArray() as number[][];\n    return (\n      <table className=\"rpe-calc-table\">\n        <RepsHeaders\n          onHelp={this.props.onHelp}\n          roundTo={this.state.roundTo}\n          onRoundChange={this.onRoundChange}\n        />\n        <tbody>\n          {matrix.map((row, y) => {\n            return (\n              <tr className=\"rpe-calc-row\" key={`row-${y}`}>\n                <td\n                  className=\"rpe-calc-cell\"\n                  style={{ textAlign: \"center\" }}\n                  key={VALID_RPE[y]}\n                >\n                  <span className=\"td-content rpe-value-cell\">\n                    {VALID_RPE[y]}\n                  </span>\n                </td>\n                {row.map((n, x) => {\n                  return (\n                    <td className=\"rpe-calc-cell\" key={`${x},${y}`}>\n                      <RPEInput\n                        x={x}\n                        y={y}\n                        n={n}\n                        handleChange={this.handleChange}\n                      />\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td className=\"reactive-link\" colSpan={VALID_REPS.length + 1}>\n              <span>\n                Percentages and methods based off{\" \"}\n                <a href=\"https://www.reactivetrainingsystems.com/Home/Main\">\n                  Reactive Training Systems\n                </a>\n              </span>\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    );\n  }\n}\n","import React from 'react';\nimport RPECalc from './RPECalc';\nimport Shepherd from 'shepherd.js';\nimport 'shepherd.js/dist/css/shepherd.css';\nimport './RPECalcTour.css';\n\n\n\n\n\n\nconst tour = new Shepherd.Tour({\n    defaultStepOptions: {\n      scrollTo: true,\n      cancelIcon: {\n        enabled: false\n      }\n    },\n    useModalOverlay:true,\n    exitOnEsc: true\n});\n\nconst PREVIOUS_BTN =  {\n    text:'Back',\n    action:tour.back,\n    classes:'previous-tour-btn'\n};\n\nconst CANCEL_BTN = {\n    text:'Exit',\n    action:tour.cancel,\n    classes:'cancel-tour-btn'\n}\n\nconst NEXT_BTN = {\n    text: 'Next',\n    action: tour.next,\n    classes:'next-tour-btn'\n}\n\nconst OK_BTN = {\n    text:'OK',\n    action:tour.cancel,\n    classes:'cancel-tour-btn' \n}\n\nconst BUTTONS = [\n    PREVIOUS_BTN,\n    CANCEL_BTN,\n    NEXT_BTN\n]\n\nconst STEPS = [\n    {\n      id:'intro',\n      text:'Welcome to RPE Matrix Calculator! This allows you to calculate multiple Rep/RPE Combinations at once',\n      attachTo: {\n        element: '.number-of-reps > .number-of-reps-span',\n        on: 'bottom' as any\n      },\n      buttons:[CANCEL_BTN,NEXT_BTN]\n    },\n    {\n        id:'weight-input',\n        text:'Input the weight lifted at the given RPE/Rep combination (eg. 295 for 3 reps at RPE 9.5). Then press Enter/Go',\n        attachTo:{\n            element:\"#root > table > tbody > tr:nth-child(2) > td:nth-child(7) > input\",\n            on: 'right'\n        },\n        buttons:BUTTONS\n    },\n    {\n        id:'rounding-to',\n        text:'Round to the nearest 5, 2.5, or 1 increment using this input',\n        attachTo:{\n            element:'.round-to-the-nearest',\n            on:'left'\n        },\n        buttons:BUTTONS\n    },\n    {\n        id:'redo-tour',\n        text:\"If you'd like to see this tour again, just click this button\",\n        attachTo:{\n            element:'.left-help-button',\n            on:'bottom'\n        },\n        buttons:[PREVIOUS_BTN, OK_BTN]\n    }\n];\n\ntour.addSteps(STEPS);\n\nconst TOUR_KEY = \"rpe-tour-completed\";\n\nconst onHelp = () => tour.start();\n\n\nexport default class RPECalcTour extends React.PureComponent {\n    componentDidMount(){\n        if(!localStorage.getItem(TOUR_KEY)){\n            tour.start();\n            localStorage.setItem(TOUR_KEY,\"true\");\n        }\n    }\n    render(){\n        return (\n                <RPECalc onHelp={onHelp}/>\n        );\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RPECalc from './RPECalc';\nimport * as serviceWorker from './serviceWorker';\nimport RPECalcTour from './RPECalcTour';\n\nReactDOM.render(\n    <RPECalcTour />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}